(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{386:function(s,t,a){s.exports=a.p+"assets/img/Lusifer1511801884.8a81c26d.png"},387:function(s,t,a){s.exports=a.p+"assets/img/gitflow.d606ac0e.png"},388:function(s,t,a){s.exports=a.p+"assets/img/master-develop.89113dc5.png"},389:function(s,t,a){s.exports=a.p+"assets/img/feature.2a5d5c1d.png"},390:function(s,t,a){s.exports=a.p+"assets/img/image-20211110215328402.4e396d1a.png"},391:function(s,t,a){s.exports=a.p+"assets/img/realse.34908921.png"},392:function(s,t,a){s.exports=a.p+"assets/img/hotfix.d606ac0e.png"},393:function(s,t,a){s.exports=a.p+"assets/img/pull-request-1.aac82535.png"},535:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"gitlab"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitlab"}},[s._v("#")]),s._v(" GitLab")]),s._v(" "),n("p",[s._v("​\t　GitLab是一个开源的"),n("strong",[s._v("项目和代码托管平台")]),s._v("，可通过 Web 界面浏览源代码，"),n("strong",[s._v("管理缺陷和注释")]),s._v("，以及管理团队对仓库的访问，另外，也非常易于浏览提交过的版本并提供一个文件历史库。")]),s._v(" "),n("p",[n("strong",[s._v("参考资料：")])]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://gitlab.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Gitlab官网"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"../topic/gitflow.html",target:"_blank"}},[s._v("GitFlow工作流")])]),s._v(" "),n("li",[n("a",{attrs:{href:"./gitlabci.html",target:"_blank"}},[s._v("GitLab CI持续集成")])])]),s._v(" "),n("h2",{attrs:{id:"快速开始"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[s._v("#")]),s._v(" 快速开始")]),s._v(" "),n("h3",{attrs:{id:"gitlab-docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-docker"}},[s._v("#")]),s._v(" GitLab Docker")]),s._v(" "),n("p",[s._v("​\t　通过Docker 来安装和运行 GitLab 中文版，首先，编辑"),n("code",[s._v("docker-compose.yml")]),s._v("文件。")]),s._v(" "),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'twang2218/gitlab-ce-zh:10.5'")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostname")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'192.168.75.145'")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("TZ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Asia/Shanghai'")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("GITLAB_OMNIBUS_CONFIG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token scalar string"}},[s._v("\n          external_url 'http://192.168.75.145:8080'\n          gitlab_rails['gitlab_shell_ssh_port'] = 2222\n          unicorn['port'] = 8888\n          nginx['listen_port'] = 8080")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'8080:8080'")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'8443:443'")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2222:22'")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /usr/local/docker/gitlab/config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/gitlab\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /usr/local/docker/gitlab/data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/opt/gitlab\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /usr/local/docker/gitlab/logs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/log/gitlab\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("​\t　接着，运行启动命令"),n("code",[s._v("docker-compose up -d")]),s._v("，执行完成后，再访问"),n("code",[s._v("http://ip:8080")]),s._v("即可进入GitLab页面，设置完管理员初始密码后，就可通过"),n("code",[s._v("root")]),s._v("账号登录了。")]),s._v(" "),n("p",[s._v("​\t　但是使用时请不要直接通过 root 用户操作，需要先创建用户，然后"),n("strong",[s._v("通过创建的用户操作")]),s._v("，如果你是管理员还需要为其他开发人员分配账户。")]),s._v(" "),n("p",[s._v("​\t　特别的，若是"),n("strong",[s._v("内部代码托管服务器")]),s._v("，需要直接"),n("strong",[s._v("关闭注册功能")]),s._v("，然后由管理员统一创建用户；新建的项目也要设定为"),n("strong",[s._v("私有项目")]),s._v("。")]),s._v(" "),n("h3",{attrs:{id:"shh免密登录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shh免密登录"}},[s._v("#")]),s._v(" SHH免密登录")]),s._v(" "),n("p",[s._v("​\t　首先，在 Git 安装目录下，使用 "),n("code",[s._v("ssh-keygen")]),s._v(" 工具生成"),n("code",[s._v("SSH KEY")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("ssh-keygen -t rsa -C "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your_email@example.com"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("​\t　将生成的秘钥文件"),n("code",[s._v("C:\\Users\\你的用户名\\.ssh\\id_rsa.pub")]),s._v(" 里面的内容复制。然后，点击GitLab中的“用户头像”--\x3e“设置”--\x3e“SSH 密钥”，并将复制的密钥增加到这里即可。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(386),alt:"Lusifer1511801884"}})]),s._v(" "),n("h2",{attrs:{id:"gitflow工作流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitflow工作流"}},[s._v("#")]),s._v(" GitFlow工作流")]),s._v(" "),n("p",[s._v("​\t　Git工作流为不同角色提供了不同分支，并定义了分支之间如何和什么时候进行交互；GitFlow 工作流有"),n("strong",[s._v("历史分支")]),s._v("（master和develop ）、"),n("strong",[s._v("功能分支")]),s._v("（feature）、"),n("strong",[s._v("发布分支")]),s._v("（release）、"),n("strong",[s._v("热修复分支")]),s._v("（hotfix）等分支角色。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(387),alt:"gitflow"}})]),s._v(" "),n("h3",{attrs:{id:"历史分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#历史分支"}},[s._v("#")]),s._v(" 历史分支")]),s._v(" "),n("p",[s._v("​\t　develop 分支作为功能的集成分支，记录了项目的"),n("strong",[s._v("全部历史")]),s._v("，master 分支存储了"),n("strong",[s._v("正式发布")]),s._v("的历史，仅记录了项目的部分历史，master 分支的每个节点都应该用新的版本号打好 Tag。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(388),alt:"master-develop"}})]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目拥有者创建开发分支，并推送到origin")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch develop\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -u origin develop\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目开发者克隆中央仓库，建好 develop 分支的跟踪分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone ssh://user@host/path/to/repo.git\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b develop origin/develop\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"功能分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#功能分支"}},[s._v("#")]),s._v(" 功能分支")]),s._v(" "),n("p",[s._v("​\t　功能分支feature使用 develop 分支作为父分支，当新功能完成后，再合并回 develop 分支，新功能分支不直接与 master 分支交互；另外，功能分支都是临时分支，合并完成后需要删除功能分支。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(389),alt:"feature"}})]),s._v(" "),n("p",[s._v("​\t　一个功能分支多人协同开发时，在开发者提交自己功能修改到中央仓库前，需要先 "),n("code",[s._v("fetch")]),s._v(" 在中央仓库的新增提交，然后，再将自己本地提交的历史通过"),n("code",[s._v("--rebase")]),s._v(" 移到同步了中央仓库修改后的分支的顶部，最终的结果是一个"),n("strong",[s._v("完美的线性历史")]),s._v("。")]),s._v(" "),n("p",[s._v("​\t　如果你忘加了这个选项，pull 操作仍然可以完成，但每次 pull 操作要同步中央仓库中别人修改时，提交历史会以一个多余的『合并提交』结尾。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 基于develop新建功能分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -b 选项表示如果分支不存在则新建分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b feature/some-feature develop\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送功能分支到中央仓库（origin）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -u origin feature/some-feature\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 功能开发")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看本地仓库的修改状态")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂存文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch origin develop "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 协同开发时，提交前先获取中央仓库的新增提交")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull --rebase origin develop "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同一分支远端若有更新，则以远端最新代码为基本线性合并")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m 注释 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 提交文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送b")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("​\t　功能分支开发完成后，需要在 Web 界面发起Pull Requests，通知团队中涉及这个功能的成员，功能开发已经完成，需要在集成提交的变更到正式项目前，对变更进行Code Review。")]),s._v(" "),n("p",[s._v("​\t　当要发起一个 Pull Request，你所要做的就是请求（Request）另一个开发者（比如项目的维护者），来 pull 你仓库中一个分支到他的仓库中。这意味着你要提供 4 个信息（源仓库、源分支、目的仓库、目的分支），以发起 Pull Request。")]),s._v(" "),n("p",[s._v("​\t　收到 Pull Request 后，项目维护者要决定如何做，如果功能没问题，就简单地合并到 develop分支，关闭 Pull Request。但如果提交的变更有问题，他可以在 Pull Request 中反馈，之后新加的提交也会评论之后接着显示出来。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(390),alt:"image-20211110215328402"}})]),s._v(" "),n("p",[s._v("​\t　Pull Requests也可以是为讨论提交的功能的一个专门论坛，比如，开发者在实现某个需求时碰到了麻烦，他可以发一个包含正在进行中工作的 Pull Request，其它的开发者可以在 Pull Request 提供建议，或者甚至直接添加提交来解决问题。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pull Requests完成，合并功能分支到develop")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换到develop分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --fast-forward 简单地把指针右移，默认")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --no-ff 生成一个新的提交对象")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --squash：使用squash方式合并，把多次分支commit历史压缩为一次")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff feature/some-feature "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#合并feature/some-feature到develop分支")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#若发现问题，并可以解决")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase --continue\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#若发现问题，不能解决，则回到你执行 git pull --rebase 命令前的样子")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase --abort\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送合并后的develop分支到远端")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin develop\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除功能分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d feature/some-feature\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h3",{attrs:{id:"部署分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署分支"}},[s._v("#")]),s._v(" 部署分支")]),s._v(" "),n("p",[s._v("​\t　一旦 develop 分支上的功能可以发布时，就从 develop 分支上 fork 一个专门用于做发布准备的"),n("code",[s._v("release")]),n("strong",[s._v("发布分支")]),s._v("，这个新建的发布分支是冻结的，"),n("strong",[s._v("只应该做 Bug 修复、文档生成和其它面向发布任务")]),s._v("，任何不在 develop 分支中的新功能都推到下个发布循环中。")]),s._v(" "),n("p",[s._v("​\t　一旦对外发布的工作都完成了，即可将发布分支合并到 master 分支并分配一个版本号打好 Tag。另外，这些从新建发布分支以来的做的修改要合并回 develop 分支。另外，部署分支都是临时分支，合并完成后需要删除部署分支。")]),s._v(" "),n("p",[s._v("​\t　使用一个用于发布准备的专门分支，使得一个团队可以在完善当前的发布版本的同时，另一个团队可以继续开发下个版本的功能。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(391),alt:"realse"}})]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 基于develop新建发布分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b release-0.1 develop\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 合并发布分支到master")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff release-0.1\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 合并发布分支到develop")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff release-0.1\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除发布分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d release-0.1\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为master打上tag")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -a "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v(" -m "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Initial public release"')]),s._v(" master\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push --tags\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("​\t　Git 有提供各种勾子（hook），即仓库有事件发生时触发执行的脚本。可以配置一个勾子，在你 push 中央仓库的 master 分支时，自动构建好对外发布。")]),s._v(" "),n("h3",{attrs:{id:"热修复分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#热修复分支"}},[s._v("#")]),s._v(" 热修复分支")]),s._v(" "),n("p",[s._v("​\t　热修复"),n("code",[s._v("hotfix")]),s._v("分支，用于生成快速给产品发布版本打补丁，这是唯一可以直接从 master 分支 fork 出来的分支。修复完成，修改应该马上合并回 master 分支和 develop 分支（当前的发布分支），master 分支应该用新的版本号打好 Tag。")]),s._v(" "),n("p",[s._v("​\t　为 Bug 修复使用专门分支，让团队可以处理掉问题而不用打断其它工作或是等待下一个发布循环。另外，热修复分支都是临时分支，合并完成后需要删除热修复分支。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(392),alt:"hotfix"}})]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 基于master新建热修复分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b issue-001 master\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修复完成后，合并到master上")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff issue-001\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修复完成后，合并到develop上")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff issue-001\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除热修复分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d issue-001\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h2",{attrs:{id:"git工作流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git工作流"}},[s._v("#")]),s._v(" Git工作流")]),s._v(" "),n("p",[s._v("​\t　Git工作流分为"),n("strong",[s._v("集中式工作流")]),s._v("、"),n("strong",[s._v("功能分支工作流")]),s._v("、"),n("strong",[s._v("GitFlow工作流")]),s._v("、"),n("strong",[s._v("Forking工作流")]),s._v("，前三种都是以中央仓库作为所有开发者的交互中心，而Forking工作流具有私有仓库（开发者拥有）和正式仓库（项目维护者拥有）两种。")]),s._v(" "),n("p",[s._v("​\t　集中式工作流，只用到 master 这一个分支，所有修改都提交到master分支上，仅设用于1 ~ 2人的开发团队，否则极易导致代码冲突。")]),s._v(" "),n("p",[s._v("​\t　功能分支工作流，开发者需要"),n("strong",[s._v("为各个新功能新建一个专门的功能分支来开发")]),s._v("，而不是都提交到 master 分支上。这个隔离不仅可以使得开发者在各自的功能上开发而不互相影响，还保证了master 主分支代码的可靠性，另外，也便于在新功能集成到master 主分支前，用 "),n("code",[s._v("Pull Requests")]),s._v(" 的方式讨论变更。")]),s._v(" "),n("h3",{attrs:{id:"git常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令"}},[s._v("#")]),s._v(" Git常用命令")]),s._v(" "),n("p",[s._v("​\t　Git 是一个开源的"),n("strong",[s._v("分布式版本控制")]),s._v("系统，常用的Git命令如下。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 常用Git命令")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建新的 Git 仓库")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拷贝一个 Git 仓库到本地")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将该文件添加到缓存")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看在你上次提交之后是否有修改")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看已缓存的改动")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" --cached "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看已缓存的改动")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" HEAD     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看已缓存的与未缓存的所有改动")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" --stat   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示摘要")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 丢弃所有未暂存文件的改动")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -df\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置用户名密码")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.name "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yourname'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.email youremail\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'update message'")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将缓存区内容添加到仓库中")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD -- "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filename"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取消已缓存的内容")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将远程存储库中的更改合并到当前分支中")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等效于 git fetch + git merge")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("远程主机名"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("远程分支名"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("本地分支名"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将本地分支的修改，推送到远程主机")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("远程主机名"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("本地分支名"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("远程分支名"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag -a v1.0.0    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给最新一次提交打上v1.0.0的标签")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有标签")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("h3",{attrs:{id:"forking工作流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#forking工作流"}},[s._v("#")]),s._v(" Forking工作流")]),s._v(" "),n("p",[s._v("​\t　Forking 工作流是开源项目的理想工作流，没有使用单个服务端仓库作为『中央』代码基线，而让各个开发者都有一个"),n("strong",[s._v("私有的服务端仓库")]),s._v("，开发者 push 到自己私有的服务端仓库，而只有项目维护者才能 push 到"),n("strong",[s._v("正式仓库")]),s._v("。这样项目维护者可以接受任何开发者的提交，但无需给他正式代码库的写权限。")]),s._v(" "),n("p",[s._v("​\t　若贡献者要集成功能到正式仓库，则需要给正式仓库发起一个 pull request，让项目维护者知道有更新已经准备好可以集成了。项目维护者 pull 贡献者的变更到自己的本地仓库中，检查变更以确保不会让项目出错，合并变更到自己本地的 master 分支，然后 push master 分支到服务器的正式仓库中。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(393),alt:"pull-request-1"}})]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目维护者初始化正式仓库")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" user@host\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init --bare /path/to/repo.git\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开发者 fork 正式仓库（页面操作）")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开发者克隆自己 fork 出来的仓库，origin 作为远程克隆的仓库的别名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://user@bitbucket.org/user/repo.git\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设定upstream（上游）作为正式仓库的别名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" upstream https://bitbucket.org/maintainer/repo\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开发者开发自己的功能")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b feature-branch\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -a -m "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add first draft of some feature"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取正式项目中最新的提交")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull upstream master\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开发者发布自己的功能")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin feature-branch\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 点击Pull Request 按钮，选择分支要合并到正式仓库（页面操作）")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目维护者集成开发者的功能")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch https://bitbucket.org/user/repo feature-branch\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# FETCH_HEAD是指从远端最新fetch的分支")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge FETCH_HEAD\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# push 变更到服务器上的正式仓库")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("h2",{attrs:{id:"附录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[s._v("#")]),s._v(" 附录")]),s._v(" "),n("h3",{attrs:{id:"gitignore"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitignore"}},[s._v("#")]),s._v(" .gitignore")]),s._v(" "),n("p",[s._v("​\t　 "),n("code",[s._v(".gitignore")]),s._v(" 是过滤配置文件，主要作用是过滤不需要上传的文件，如IDE 生成的工程文件、编译后的 class 文件等。在工程目录下，新建 "),n("code",[s._v(".gitignore")]),s._v(" 文件，并填入如下配置：")]),s._v(" "),n("div",{staticClass:"language-properties line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-properties"}},[n("code",[s._v(".gradle\n*.sw?\n.#*\n*#\n*~\n/build\n/code\n.classpath\n.project\n.settings\n.metadata\n.factorypath\n.recommenders\nbin\nbuild\ntarget\n.factorypath\n.springBeans\ninterpolated*.xml\ndependency-reduced-pom.xml\nbuild.log\n_site/\n.*.md.html\nmanifest.yml\nMANIFEST.MF\nsettings.xml\nactivemq-data\noverridedb.*\n*.iml\n*.ipr\n*.iws\n.idea\n.DS_Store\n.factorypath\ndump.rdb\ntransaction-logs\n**/overlays/\n**/logs/\n**/temp/\n**/classes/\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("h3",{attrs:{id:"gitattributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitattributes"}},[s._v("#")]),s._v(" .gitattributes")]),s._v(" "),n("p",[s._v("​\t　 Windows 文本文件的换行符是 "),n("code",[s._v("\\r\\n")]),s._v("（CRLF）、 MacOS 文本文件的换行符是 "),n("code",[s._v("\\n")]),s._v("（LF）。为了使得不同系统环境的开发者能开发同一个git项目，需要通过 "),n("code",[s._v(".gitattributes")]),s._v("进行配置。")]),s._v(" "),n("div",{staticClass:"language-properties line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-properties"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Windows-specific files that require CRLF:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("*.bat")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("      eol=crlf")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("*.txt")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("      eol=crlf")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Unix-specific files that require LF:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("*.java")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("     eol=lf")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("*.sh")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("       eol=lf")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);