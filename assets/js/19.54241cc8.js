(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{384:function(s,a,t){s.exports=t.p+"assets/img/image-20211112104742557.27498588.png"},385:function(s,a,t){s.exports=t.p+"assets/img/image-20211112140608362.7c31f2a1.png"},534:function(s,a,t){"use strict";t.r(a);var n=t(25),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" Docker")]),s._v(" "),n("p",[n("strong",[s._v("参考资料：")])]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker 官方 Ubuntu 安装文档"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://www.daocloud.io/mirror#accelerator-doc",target:"_blank",rel:"noopener noreferrer"}},[s._v("DaoCloud镜像服务"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://get.daocloud.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker 极速下载"),n("OutboundLink")],1)])]),s._v(" "),n("h2",{attrs:{id:"简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),n("p",[s._v("​\t　Docker容器基于操作系统层面的虚拟化技术，对"),n("strong",[s._v("进程进行封装隔离")]),s._v("，使得隔离的进程独立于宿主和其它的隔离的进程；在容器的基础上，还进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护，使得 Docker 技术比虚拟机技术更为轻便、快捷。")]),s._v(" "),n("p",[s._v("​\t　传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而Docker 不是虚拟机，容器就是为容器内的应用提供隔离环境的进程，容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。")]),s._v(" "),n("p",[n("img",{attrs:{src:t(384),alt:"image-20211112104742557"}})]),s._v(" "),n("p",[s._v("​\t　Docker 跟传统的虚拟化方式相比，Docker容器具有"),n("strong",[s._v("更高效的利用系统资源")]),s._v("、"),n("strong",[s._v("更快速的启动时间")]),s._v("、"),n("strong",[s._v("一致的运行环境")]),s._v("、"),n("strong",[s._v("持续交付和部署")]),s._v("、"),n("strong",[s._v("更轻松的迁移")]),s._v("、"),n("strong",[s._v("更轻松的维护和扩展")]),s._v("。")]),s._v(" "),n("p",[s._v("​\t　Docker 使用"),n("strong",[s._v("客户端-服务器 (C/S)")]),s._v(" 架构模式，"),n("strong",[s._v("Docker 引擎（服务端守护进程）"),n("strong",[s._v("是一个")]),s._v("长时间运行")]),s._v("并"),n("strong",[s._v("守护进程")]),s._v("的客户端服务器应用程序，"),n("strong",[s._v("Docker客户端")]),s._v("可以通过"),n("strong",[s._v("命令行界面 (CLI) 工具")]),s._v("调用 "),n("strong",[s._v("远程 API")]),s._v("  与"),n("strong",[s._v("守护进程通讯")]),s._v("。客户端执行各种Docker命令都是使用的远程调用形式在服务端完成的。"),n("img",{attrs:{src:t(385),alt:"image-20211112140608362"}})]),s._v(" "),n("h2",{attrs:{id:"快速开始"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[s._v("#")]),s._v(" 快速开始")]),s._v(" "),n("p",[s._v("​\t　可以执行Docker官方提供的安装脚本快速安装Docker。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 阿里云一键安装命令")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://get.docker.com "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" -s docker --mirror Aliyun\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# daocloud一键安装命令")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -sSL https://get.daocloud.io/docker "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动Docker")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker start\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行 hello-world镜像，则表明安装成功")]),s._v("\ndocker run hello-world\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看docker版本")]),s._v("\ndocker version\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("​\t　只有 "),n("code",[s._v("root")]),s._v(" 用户和 "),n("code",[s._v("docker")]),s._v(" 组的用户才可以访问 Docker 引擎，出于安全考虑，一般 Linux 系统上不会直接使用 "),n("code",[s._v("root")]),s._v(" 用户，因此，更好地做法是将需要使用 "),n("code",[s._v("docker")]),s._v(" 的用户加入 "),n("code",[s._v("docker")]),s._v(" 用户组。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 建立 docker 用户组")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("groupadd")]),s._v(" docker\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将当前用户加入docker组")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("usermod")]),s._v(" -aG docker "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$USER")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("​\t　国内从 DockerHub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。Docker 官方和国内很多云服务商都提供了国内加速器服务，例如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("- 科大镜像：https://docker.mirrors.ustc.edu.cn/\n- 网易：https://hub-mirror.c.163.com/\n- 阿里云：https://<你的ID>.mirror.aliyuncs.com\n- Docker官方加速器：https://registry.docker-cn.com\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("（1）Ubuntu 14.04、Debian 7 Wheezy")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 类型一：Ubuntu 14.04、Debian 7 Wheezy")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编辑 /etc/default/docker 文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/default/docker\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在其中的 `DOCKER_OPTS` 中配置加速器地址")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_OPTS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--registry-mirror=https://registry.docker-cn.com"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启服务")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker restart\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("（2）Ubuntu 16.04+、Debian 8+、CentOS 7")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 类型二：Ubuntu 16.04+、Debian 8+、CentOS 7")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编辑 /etc/docker/daemon.json 文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/docker/daemon.json\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在daemon.json中添加加速器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registry-mirrors"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://registry.docker-cn.com"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启服务")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart docker\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("​\t　配置完成后，可以通过"),n("code",[s._v("docker info")]),s._v("命令查看加速器是否生效。若从结果中看到了如下内容，说明配置成功。")]),s._v(" "),n("div",{staticClass:"language-yml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("Registry Mirrors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n https"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//registry.docker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("cn.com/\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"docker镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像"}},[s._v("#")]),s._v(" Docker镜像")]),s._v(" "),n("p",[s._v("​\t　Docker镜像(Images)是一个"),n("strong",[s._v("特殊的文件系统")]),s._v("，用于创建 Docker 容器的模板，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。在Linux内核启动后，会挂载Docker镜像为其提供用户空间支持。")]),s._v(" "),n("p",[s._v("​\t　镜像采用"),n("strong",[s._v("分层存储")]),s._v("的架构，镜像并非由一个文件组成，而是由"),n("strong",[s._v("多层文件")]),s._v("系统联合组成。"),n("strong",[s._v("镜像不包含任何动态数据，其内容在构建之后也不会被改变")]),s._v("。")]),s._v(" "),n("p",[s._v("​\t　镜像构建时会一层层构建，前一层是后一层的基础，每一层构建完就不会再发生改变，后一层上的任何改变只发生在自己这一层。Docker 使用的分层存储以及镜像的技术，使得应用重复部分的"),n("strong",[s._v("复用")]),s._v("更为容易、应用的"),n("strong",[s._v("维护更新")]),s._v("更加简单、基于基础镜像"),n("strong",[s._v("定制镜像")]),s._v("也成为可能。")]),s._v(" "),n("h3",{attrs:{id:"顶层镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#顶层镜像"}},[s._v("#")]),s._v(" 顶层镜像")]),s._v(" "),n("p",[s._v("（1）拉取镜像")]),s._v(" "),n("p",[s._v("​\t　一个 Docker仓库中可以包含多个"),n("strong",[s._v("仓库")]),s._v("（Repository）；每个仓库可以包含多个"),n("strong",[s._v("标签")]),s._v("（Tag）；每个标签对应一个镜像。"),n("strong",[s._v("镜像 ID和摘要是镜像的唯一标识")]),s._v("，而一个镜像可以对应多个"),n("strong",[s._v("标签")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\ndocker pull "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("选项"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Docker Registry 地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":端口号"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("仓库名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":标签"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从DockerHub官方拉取镜像，不需要指定IP、Port、用户名（默认用户名为library）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从DockerHub个人拉取、推送镜像，不需要指定IP、Port，但是要指定用户名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从Docker私服拉取、推送镜像，需要指定IP、Port")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("​\t　Docker 镜像仓库地址的格式一般是 "),n("code",[s._v("<域名/IP>[:端口号]")]),s._v("，默认地址是 "),n("code",[s._v("Docker Hub")]),s._v("；仓库名格式是 "),n("code",[s._v("<用户名>/<软件名>")]),s._v("，对于 Docker Hub，如果不给出用户名，则默认为 "),n("code",[s._v("library")]),s._v("，也就是官方镜像。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找官方仓库中的镜像")]),s._v("\ndocker search ubuntu\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像")]),s._v("\ndocker pull ubuntu:16.04  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定版本")]),s._v("\ndocker pull ubuntu:latest "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最新版本")]),s._v("\ndocker pull ubuntu "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认，最新版本")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行结果")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("16.04")]),s._v(": Pulling from library/ubuntu\nbf5d46315322: Pull complete\n9f13e0ac480c: Pull complete\ne8988b5b3097: Pull complete\n40af181810e7: Pull complete\ne6f7c7e5c03e: Pull complete\nDigest: sha256:147913621d9cdea08853f6ba9116c2e27a3ceffecf3b492983ae97c3d643fbbe\nStatus: Downloaded newer image "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" ubuntu:16.04\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("​\t　镜像是"),n("strong",[s._v("由多层存储所构成")]),s._v("，下载也是一层层的去下载，下载过程中给出了每一层的 ID 的前 12 位，并与该层最新的镜像ID比对，若该层镜像未发生变动，则无需再次下载，否则下载该层镜像。下载结束后，给出该镜像完整的 "),n("code",[s._v("sha256")]),s._v(" 的摘要，以确保下载一致性。")]),s._v(" "),n("p",[s._v("（2）列出镜像")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出全部顶层镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出全部顶层镜像")]),s._v("\ndocker images\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示包括中间层镜像、虚悬镜像、顶层镜像在内的所有镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -a\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询镜像摘要")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" --digests\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据仓库名列出镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" ubuntu\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定仓库名和标签，列出特定的某个镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" ubuntu:16.04\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出 ubuntu:16.04 之后建立的镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("since")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ubuntu:16.04\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出 ubuntu:16.04 之前建立的镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("before")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ubuntu:16.04\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果镜像构建时，定义了 LABEL，还可以通过 LABEL 来过滤")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("label")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("com.example.version"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("​\t　查询出的列表包含了 "),n("code",[s._v("仓库名")]),s._v("、"),n("code",[s._v("标签")]),s._v("、"),n("code",[s._v("镜像 ID")]),s._v("、"),n("code",[s._v("创建时间")]),s._v(" 以及 "),n("code",[s._v("所占用的空间")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("REPOSITORY         TAG              IMAGE ID           CREATED            SIZE\nubuntu             "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("16.04")]),s._v("            f753707788c5       "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),s._v(" MB\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("​\t　Docker Hub 中显示的是"),n("strong",[s._v("镜像压缩后的大小")]),s._v("，"),n("code",[s._v("docker image ls")]),s._v("显示的是镜像"),n("strong",[s._v("展开后的各层所占空间的总和")]),s._v("，但是，镜像体积总和并非是所有镜像实际硬盘消耗，由于 Docker 镜像是多层存储结构，并且可以继承、复用，因此不同镜像可能会因为使用相同的基础镜像，从而拥有共同的层，相同的层只需要保存一份即可，因此实际镜像硬盘占用空间很可能要比这个列表镜像大小的总和要小的多。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看镜像、容器、数据卷所占用的空间")]),s._v("\ndocker system "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行实例")]),s._v("\nTYPE                TOTAL       ACTIVE      SIZE                RECLAIMABLE\nImages              "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.444")]),s._v(" GB            "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.363")]),s._v(" GB "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("55")]),s._v("%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nContainers          "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("314.5")]),s._v(" MB            "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("306.5")]),s._v(" MB "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("97")]),s._v("%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nLocal Volumes       "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" B                 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" B\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("​\t　另外，还可以通过 "),n("a",{attrs:{href:"https://gohugo.io/templates/go-templates/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Go 的模板语法"),n("OutboundLink")],1),s._v("自定义输出的表格结构。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只包含镜像ID")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -q\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只包含镜像ID和仓库名")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" --format "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{{.ID}}: {{.Repository}}"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表格等距显示")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(' --format "table '),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(".ID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(".Repository"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(".Tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("（3）标记镜像")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过tag标记已有版本号")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\ndocker tag IMAGE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":TAG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("REGISTRY_HOST"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":REGISTRY_PORT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("REPOSITORY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":TAG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将镜像 ubuntu:17.10 标记为  ubuntu:latest")]),s._v("\ndocker tag ubuntu:17.10 ubuntu\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("（4）删除镜像")]),s._v(" "),n("p",[s._v("​\t　执行删除镜像命令时，由于镜像是多层存储结构，因此在删除的时候也是从上层向基础层方向依次进行判断删除。首先，需要将满足要求的所有镜像标签都删除，即"),n("code",[s._v("Untagged")]),s._v("删除行为.")]),s._v(" "),n("p",[s._v("​\t　但一个镜像可以有多个标签，当我们删除了所指定的标签后，可能还有别的标签指向了这个镜像，"),n("strong",[s._v("当没有任何层依赖当前层时")]),s._v("，就会触发"),n("code",[s._v("Deleted")]),s._v("删除行为。")]),s._v(" "),n("p",[s._v("​\t　另外，由于容器是以镜像为基础，再加一层容器存储层，组成这样的多层存储结构去运行的，所以，该镜像是被这个容器所依赖的，即使容器未运行，也不可以删除这个镜像；应先删除容器，再删除镜像。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <镜像> 可以是 镜像短 ID、镜像长 ID、镜像名 或者 镜像摘要")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("选项"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("镜像"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("镜像"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 长 ID 删除镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" 501ad78535f0\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 短 ID 删除镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("501")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用镜像名<仓库名>:<标签> 删除镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" centos\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有仓库名为 redis 的镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -q redis"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有在 mongo:3.2 之前的镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -q -f "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("before")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mongo:3.2"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除一个镜像")]),s._v("\ndocker rmi "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("image ID or NAMES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有没有容器运行的镜像")]),s._v("\ndocker rmi "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker images -q"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制删除所有没有容器运行的镜像")]),s._v("\ndocker rmi -r "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker images -q"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有虚悬镜像")]),s._v("\ndocker rmi "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker images -q -f "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dangling")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h3",{attrs:{id:"无标签镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#无标签镜像"}},[s._v("#")]),s._v(" 无标签镜像")]),s._v(" "),n("p",[s._v("（1）虚悬镜像")]),s._v(" "),n("p",[s._v("​\t　在镜像维护或者版本更新时，都会"),n("strong",[s._v("以原来的标签发布新版本")]),s._v("，由于新旧镜像同名，旧镜像名称被取消，从而出现仓库名、标签均为 "),n("code",[s._v("<none>")]),s._v(" 的镜像，这类无标签镜像也被称为 "),n("strong",[s._v("虚悬镜像")]),s._v(" 。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker pull 和 docker build 操作可能会导致出现虚悬镜像")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取最新的nginx，若nginx:latest有维护，还是会以原来的标签发布新版本的")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这就导致pull操作h，原来的nginx:latest就成了虚悬镜像")]),s._v("\ndocker pull nginx\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新构建nginx:latest,就会导致上一个nginx最新版变成虚悬镜像")]),s._v("\ndocker build -t nginx "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("​\t　"),n("code",[s._v("docker pull")]),s._v("和"),n("code",[s._v("docker build")]),s._v("都有可能出现这种情况。一般来说，虚悬镜像已经失去了存在的价值，是可以随意删除的。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看虚悬镜像镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dangling")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 虚悬镜像列表")]),s._v("\nREPOSITORY     TAG          IMAGE ID            CREATED             SIZE\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("       00285df0df87        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" days ago          "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("342")]),s._v(" MB\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清理虚悬镜像（会有交互）")]),s._v("\ndocker image prune\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有虚悬镜像")]),s._v("\ndocker rmi "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker images -q -f "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dangling")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("（2）中间层镜像")]),s._v(" "),n("p",[s._v("​\t　除了虚悬镜像外的无标签的镜像都是被其他镜像所依赖的"),n("strong",[s._v("中间层镜像")]),s._v("，一般用于加速镜像构建、重复利用资源等。中间层镜像不应该被手动删除，否则会导致上层镜像因为依赖丢失而出错；"),n("strong",[s._v("只要删除那些依赖它们的镜像后，这些依赖的中间层镜像也会被连带删除")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示包括所有镜像")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -a\n\nREPOSITORY      TAG         IMAGE ID           CREATED             SIZE\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("      40eea04b120        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" hours ago        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("634")]),s._v(" MB\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 中间层镜像不建议被删除")]),s._v("\ndocker image "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" 440eea04b120 \nError response from daemon: conflict: unable to delete 440eea04b120 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h2",{attrs:{id:"定制应用镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定制应用镜像"}},[s._v("#")]),s._v(" 定制应用镜像")]),s._v(" "),n("p",[s._v("​\t　镜像的定制实际上就是"),n("strong",[s._v("定制每一层所添加的配置、文件")]),s._v("。开发人员 可以通过"),n("code",[s._v("Dockerfile")]),s._v("定制应用镜像，运维人员可以在生产环境中快速部署该镜像，从而实现应用的持续集成、持续交付、部署。")]),s._v(" "),n("p",[s._v("​\t　Dockerfile 是一个文本文件，其内包含了一条条的"),n("strong",[s._v("指令(Instruction)")]),s._v("，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。")]),s._v(" "),n("p",[s._v("​\t　镜像是分层存储，每一层的东西并不会在下一层被删除，会一直跟随着镜像，因此镜像构建时，要确保"),n("strong",[s._v("每一层构建后清理掉无关文件")]),s._v("，以及"),n("strong",[s._v("减少构建层数")]),s._v("。")]),s._v(" "),n("h3",{attrs:{id:"dockerfile命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile命令"}},[s._v("#")]),s._v(" Dockerfile命令")]),s._v(" "),n("p",[s._v("（1）FROM指令")]),s._v(" "),n("p",[s._v("​\t　 "),n("code",[s._v("FROM")]),s._v(" 指令是用来指定基础镜像，"),n("strong",[s._v("必须是第一条指令")]),s._v("。基础镜像可以是服务类的镜像、系统镜像、"),n("code",[s._v("scratch")]),s._v("空白镜像。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" nginx\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("（2）RUN指令")]),s._v(" "),n("p",[s._v("​\t　"),n("code",[s._v("RUN")]),s._v(" 指令是用来执行"),n("code",[s._v("命令行")]),s._v("命令的，每一个 "),n("code",[s._v("RUN")]),s._v(" 都是启动一个容器、执行命令、然后提交存储层文件变更。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\nRUN "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("命令"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shel格式")]),s._v("\nRUN "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"可执行文件"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数1"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec格式")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例")]),s._v("\nRUN "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<h1>Hello, Docker!</h1>'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/share/nginx/html/index.html\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("​\t　特别的，"),n("strong",[s._v("镜像构建层数是有最大层数限制的")]),s._v("。比如， AUFS不得超过 127 层。所以，需要对同一指令的行为需要使用 "),n("code",[s._v("&&")]),s._v(" 将各个所需命令串联起来。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" rm redis.tar.gz \\\n    && rm "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("r /usr/src/redis\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("（3）WORKDIR指令")]),s._v(" "),n("p",[s._v("​\t　 "),n("code",[s._v("WORKDIR")]),s._v(" 指令是用来指定"),n("strong",[s._v("各层工作目录")]),s._v("位置，如该目录不存在，则自动新建。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" <工作目录路径"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("​\t　 两行 "),n("code",[s._v("RUN")]),s._v(" 命令是两个相互隔离的容器，第一层的执行仅仅是当前进程的工作目录变更，而第二层启动的是一个全新的容器，跟第一层的容器完全没关系，不会继承前一层构建过程中的内存变化。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误构建方式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" cd /app\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建镜像运行后，会发现找不到 /app/world.txt 文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" world.txt\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 正确构建方式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" cd /app\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" world.txt\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("（4）COPY指令")]),s._v(" "),n("p",[s._v("​\t　"),n("code",[s._v("COPY")]),s._v(" 指令用来从构建"),n("strong",[s._v("上下文目录中")]),s._v("，源路径的文件目录复制到新的一层的镜像内的目标路径位置。源路径可以是多个，甚至可以是通配符，其通配符规则要满足 Go 的 "),n("a",{attrs:{href:"https://golang.org/pkg/path/filepath/#Match",target:"_blank",rel:"noopener noreferrer"}},[s._v("filepath.Match"),n("OutboundLink")],1),s._v(" 规则。使用 "),n("code",[s._v("COPY")]),s._v(" 指令，源文件的各种元数据都会保留，比如读、写、执行权限、文件变更时间等。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" <源路径"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v(" <目标路径"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shel格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<源路径1>"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<目标路径>"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 函数调用格式")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package.json /usr/src/app/\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" hom* /mydir/\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" hom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("?")]),s._v(".txt /mydir/\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("（5）ADD指令")]),s._v(" "),n("p",[s._v("​\t　"),n("code",[s._v("ADD")]),s._v(" 指令若源路径是"),n("code",[s._v("URL")]),s._v("，Docker 引擎会"),n("strong",[s._v("自动下载链接的文件放到目标路径")]),s._v("，下载后的文件权限自动设置为 "),n("code",[s._v("600")]),s._v("；若源路径是压缩文件，Docker 引擎会"),n("strong",[s._v("自动解压到目标路径")]),s._v("。")]),s._v(" "),n("p",[s._v("​\t　"),n("code",[s._v("ADD")]),s._v(" 指令仅适用于自动解压缩的场合，文件复制建议还是使用语义更加明确的"),n("code",[s._v("COPY")]),s._v(" 指令。特别的，"),n("code",[s._v("ADD")]),s._v(" 指令会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" <源路径"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v(" <目标路径"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shel格式")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" ubuntu.tar.gz /\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("（6）EXPOSE指令")]),s._v(" "),n("p",[s._v("​\t　"),n("code",[s._v("EXPOSE")]),s._v(" 指令是"),n("strong",[s._v("声明")]),s._v("运行时容器提供服务端口。注意，这只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务 （端口服务通过run运行） 或者 自动在宿主进行端口映射（端口映射通过-p或者-P实现）。")]),s._v(" "),n("p",[s._v("​\t　EXPOSE指令首先可以帮助开发者明确镜像服务的守护端口，以方便配置映射；另外，在运行时使用随机端口映射时，会自动随机映射EXPOSE的端口。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" <端口1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("<端口2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("（7）VOLUME指令")]),s._v(" "),n("p",[s._v("​\t　数据库文件应该保存于卷(volume)中，为了防止运行时用户忘记将动态文件所保存目录挂载为卷，可以通过"),n("code",[s._v("VOLUME")]),s._v("指令"),n("strong",[s._v("事先指定某些目录挂载为匿名卷")]),s._v("，这样在运行时如果用户不指定挂载，其应用也可以正常运行，不会向容器存储层写入大量数据。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<路径1>"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<路径2>"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" <路径"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" /data\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("​\t　 "),n("code",[s._v("/data")]),s._v(" 目录就会在运行时自动挂载为匿名卷，任何向 "),n("code",[s._v("/data")]),s._v(" 中写入的信息都不会记录进容器存储层，从而保证了容器存储层的无状态化。另外，在运行时还可通过"),n("code",[s._v("-v")]),s._v("重写这个挂载设置。")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mydata目录挂载到了/data, 替代了Dockerfile中定义的匿名卷的挂载配置")]),s._v("\ndocker run -d -v mydata:/data mysql\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("（8）CMD指令")]),s._v(" "),n("p",[s._v("​\t　"),n("code",[s._v("CMD")]),s._v(" 指令用于指定"),n("strong",[s._v("容器主进程的启动命令以及参数格式")]),s._v("。容器是隔离的进程，"),n("strong",[s._v("启动容器就是启动主进程")]),s._v("，"),n("strong",[s._v("容器内的应用都是在前台执行")]),s._v("，没有后台服务的概念，若容器主进程退出，则容器就会退出。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" <命令"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shel格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"可执行文件"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec格式")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("​\t　"),n("code",[s._v("shell格式")]),s._v("，容器主进程的启动命令默认为"),n("code",[s._v("sh")]),s._v("命令。实际的命令会被包装为 "),n("code",[s._v("sh -c")]),s._v(" 的参数的形式进行执行。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例一")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" echo $HOME\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在实际执行中，会将其变更为")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo $HOME"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例二")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" java "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("jar ./project.jar\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在实际执行中，会将其变更为")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java -jar ./project.jar"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误写法（容器内的应用都是在前台执行）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" service nginx start\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 主进程是 sh，当 service nginx start 命令结束后 sh 作为主进程退出了，容器自然就会退出")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该方式无法实现在后台运行nginx，只能通过 exec格式 将nginx作为主程序 前台启动")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"service nginx start"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("​\t　"),n("code",[s._v("exec 格式")]),s._v("，可以"),n("strong",[s._v("自定义设定容器主进程的启动命令")]),s._v("，注意，命令会被解析为JSON数组，因此一定要使用双引号 "),n("code",[s._v('"')]),s._v("，而不要使用单引号")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 主进程是nginx，前台形式运行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-g"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"daemon off;"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 主进程是catalina.sh，前台形式运行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"catalina.sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"run"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("​\t　另外，在运行时也可以指定新的命令来替代镜像设置中的这个默认命令。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 原来：ubuntu 镜像默认的 CMD 是 /bin/bash，直接进入bash")]),s._v("\ndocker run -it ubuntu\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 现在：镜像名后面的 cat /etc/os-release 命令替换了CMD默认的 /bin/bash 命令作为主进程")]),s._v("\ndocker run -it ubuntu "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/os-release "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出系统版本信息")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("（9）ENTRYPOINT指令")]),s._v(" "),n("p",[s._v("​\t　"),n("code",[s._v("ENTRYPOINT")]),s._v(" 指令和 "),n("code",[s._v("CMD")]),s._v(" 一样，都是"),n("strong",[s._v("指定容器启动程序及参数")]),s._v("，但是ENTRYPOINT指令不是直接的运行其命令，而是将 CMD 的内容作为参数传给 ENTRYPOINT指令。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式,支持exec 格式和 shell 格式")]),s._v("\n<ENTRYPOINT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<CMD>"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("​\t　场景一，让镜像变成像命令一样使用。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例一")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run myip -i ==> ENTRYPOINT 解析成 curl -s http://ip.cn -i，正确")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"curl"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-s"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://ip.cn"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run myip -i ==> CMD 会将 -i 替换默认命令执行，直接执行 -i ,引发执行文件找不到错误")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"curl"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-s"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://ip.cn"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例二")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在Dockerfile中CMD和ENTRYPOINT都只能出现一次,但有时需要在Dockerfile中执行多个脚本进行初始化，这时候只能使用ENTRYPOINT")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dockerize"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-timeout"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5m"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-wait"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tcp://192.168.75.128:8888"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-jar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/app/app.jar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--spring.profiles.active=prod"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("​\t　场景二，处理应用运行前和容器 "),n("code",[s._v("CMD")]),s._v(" 无关的预处理工作。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行自定义脚本，脚本可以根据传入的参数执行不同的操作")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker-entrypoint.sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 传入参数id")]),s._v("\ndocker run "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("it redis id\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("（10）ENV指令")]),s._v(" "),n("p",[s._v("​\t　"),n("code",[s._v("ENV")]),s._v("指令用于定义环境变量，在后续的指令中，可以直接使用ENV指令定义的环境变量。通过环境变量，我们可以让一份 "),n("code",[s._v("Dockerfile")]),s._v(" 制作更多的镜像，只需使用不同的环境变量即可。")]),s._v(" "),n("p",[s._v("​\t　下列指令可以支持环境变量展开： "),n("code",[s._v("ADD")]),s._v("、"),n("code",[s._v("COPY")]),s._v("、"),n("code",[s._v("ENV")]),s._v("、"),n("code",[s._v("EXPOSE")]),s._v("、"),n("code",[s._v("LABEL")]),s._v("、"),n("code",[s._v("USER")]),s._v("、"),n("code",[s._v("WORKDIR")]),s._v("、"),n("code",[s._v("VOLUME")]),s._v("、"),n("code",[s._v("STOPSIGNAL")]),s._v("、"),n("code",[s._v("ONBUILD")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" <key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" <value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" <key1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("=<value1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" <key2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("=<value2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(' NODE_VERSION=1.0 OS_VERSION=x64"\n'),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" tar "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("xJf "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-v$NODE_VERSION-linux-$OS_VERSION.tar.xz"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("C /usr/local\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"构建镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像"}},[s._v("#")]),s._v(" 构建镜像")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 语法格式")]),s._v("\ndocker build "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("选项"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("上下文路径/URL/-"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建镜像名称为: nginx:v3 ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上下文路径为： .")]),s._v("\ndocker build -t nginx:v3 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行结果")]),s._v("\nSending build context to Docker daemon "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.048")]),s._v(" kB "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送给Docker引擎")]),s._v("\nStep "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" FROM nginx\n ---"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" e43d811ce2f4 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建第一层 e43d811ce2f4")]),s._v("\nStep "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" RUN "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<h1>Hello, Docker!</h1>'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/share/nginx/html/index.html\n ---"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Running "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" 9cdc27646c7b "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RUN 指令启动了一个容器 9cdc27646c7b")]),s._v("\n ---"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 44aa4490ce2c "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建第二 44aa4490ce2c")]),s._v("\nRemoving intermediate container 9cdc27646c7b "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除了所用到的容器 9cdc27646c7b")]),s._v("\nSuccessfully built 44aa4490ce2c\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("（1）镜像上下文路径")]),s._v(" "),n("p",[s._v("​\t　 "),n("code",[s._v("docker build")]),s._v(" 命令构建镜像，其实是在 Docker 引擎中构建的。当构建的时候，用户要指定构建镜像上下文的路径，"),n("code",[s._v("docker build")]),s._v(" 命令会将上下文路径下的所有内容打包，然后上传给 Docker 引擎。这样 Docker 引擎收到这个上下文包后，展开就会获得构建镜像所需的一切文件。")]),s._v(" "),n("p",[s._v("​\t　因此，"),n("code",[s._v("COPY")]),s._v(" 这类指令中的源文件的路径都是相对路径，否则，就会因为超出了上下文的范围，使得Docker 引擎无法获得这些位置的文件，最终导致构建失败。如果真的需要那些文件，应该将它们复制到上下文目录中去。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制 上下文（context） 目录下的 package.json 到 /app/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" ./package.json /app/\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误示例，路径已经超出了上下文的范围，Docker 引擎无法获得这些位置的文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" ../package.json /app \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" /opt/xxxx /app\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("​\t　如果目录下有些东西确实不希望构建时传给 Docker 引擎，那么可以用 "),n("code",[s._v(".gitignore")]),s._v(" 一样的语法写一个 "),n("code",[s._v(".dockerignore")]),s._v("，该文件是用于剔除不需要作为上下文传递给 Docker 引擎的。")]),s._v(" "),n("p",[s._v("​\t　构建时默认将上下文目录下的名为 "),n("code",[s._v("Dockerfile")]),s._v(" 的文件作为 Dockerfile。也可通过"),n("code",[s._v("-f")]),s._v("参数自定义Dockerfile文件位置，但是，一般大家习惯性的会使用默认的文件名 "),n("code",[s._v("Dockerfile")]),s._v("，以及会将其置于镜像构建上下文目录中。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不建议自定义Dockerfile路径")]),s._v("\ndocker build -t nginx:v3 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/Dockerfile.php\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("（2）特殊的构建方法")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 直接用 Git repo 进行构建")]),s._v("\ndocker build https://github.com/twang2218/gitlab-ce-zh.git"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#:8.14")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("​\t　这行命令指定了构建所需的 Git repo，并且指定默认的 "),n("code",[s._v("master")]),s._v(" 分支，构建目录为 "),n("code",[s._v("/8.14/")]),s._v("，然后 Docker 就会自己去 "),n("code",[s._v("git clone")]),s._v(" 这个项目、切换到指定分支、并进入到指定目录后开始构建。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用给定的 tar 压缩包构建")]),s._v("\ndocker build http://server/context.tar.gz\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("​\t　这行命令指定了构建所需的"),n("code",[s._v("tar")]),s._v(" 压缩包，那么 Docker 引擎会下载这个包，并自动解压缩，以其作为上下文，开始构建。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从标准输入中读取 Dockerfile 进行构建")]),s._v("\ndocker build - "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" Dockerfile \t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 写法一")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" Dockerfile "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" docker build -\t \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 写法二")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("​\t　如果标准输入传入的是文本文件，则将其视为 "),n("code",[s._v("Dockerfile")]),s._v("，并开始构建。这种形式由于直接从标准输入中读取 Dockerfile 的内容，它没有上下文，因此不可以像其他方法那样可以将本地文件 "),n("code",[s._v("COPY")]),s._v(" 进镜像之类的事情。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从标准输入中读取上下文压缩包进行构建")]),s._v("\ndocker build - "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" context.tar.gz\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("​\t　如果发现标准输入的文件格式是 "),n("code",[s._v("gzip")]),s._v("、"),n("code",[s._v("bzip2")]),s._v(" 以及 "),n("code",[s._v("xz")]),s._v(" 的话，将会使其为上下文压缩包，直接将其展开，将里面视为上下文，并开始构建。")]),s._v(" "),n("h2",{attrs:{id:"docker容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker容器"}},[s._v("#")]),s._v(" Docker容器")]),s._v(" "),n("p",[s._v("​\t　容器(Container)是镜像运行时的实体。启动容器实质就是在"),n("strong",[s._v("独立的命名空间")]),s._v("中以"),n("strong",[s._v("前台运行")]),s._v("的方式"),n("strong",[s._v("启动容器主进程")]),s._v("。容器主进程运行于隔离的环境，拥有独立的 "),n("code",[s._v("root")]),s._v(" 文件系统、网络配置、进程空间等，就像是在一个独立于宿主的系统下运行一样。")]),s._v(" "),n("p",[s._v("​\t　每一个容器运行时，是以镜像为基础层，在其上创建一个为容器运行时读写而准备的存储层为"),n("strong",[s._v("容器存储层")]),s._v("。容器存储层是无状态化的，生存周期和容器一样，任何保存于容器存储层的信息都会随容器删除而丢失。")]),s._v(" "),n("h3",{attrs:{id:"操作容器命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作容器命令"}},[s._v("#")]),s._v(" 操作容器命令")]),s._v(" "),n("p",[s._v("（1）启动容器")]),s._v(" "),n("p",[s._v("​\t　启动容器有"),n("strong",[s._v("基于镜像新建一个容器")]),s._v("并启动 和 将在终止状态（"),n("code",[s._v("stopped")]),s._v("）的容器"),n("strong",[s._v("重新启动")]),s._v(" 两种启动方式。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例一：前台运行、交互式终端方式启动")]),s._v("\ndocker run -it --rm ubuntu:16.04 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 参数说明")]),s._v("\n-it 以交互式终端方式启动（-i交互式操作，-t 终端）\n\t-t: 让Docker分配一个伪终端并绑定到容器的标准输入上\n\t-i：让容器的标准输入保持打开。只用 -i 参数时,虽没有终端,但命令执行结果仍然可以返回\n--rm：容器退出后删除，默认情况下，退出的容器并不会立即删\nbash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例二：以以守护态运行")]),s._v("\ndocker run -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TZ")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Asia/Shanghai   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--restart always   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--name ubuntu   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\tubuntu:16.04\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 参数说明")]),s._v("\n-d: 以守护态运行\n-e: 设定启动参数，时区为中国时区\n--restart: 发生异常时自动重启容器\n--name "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 设定容器名称\n-p "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("宿主端口"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("容器端口"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(": 映射宿主端口和容器端口，将容器的对应端口服务公开给外界访问\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run创建容器时，Docker 在后台运行的标准操作包括")]),s._v("\n- 检查本地是否存在指定的镜像，不存在就从公有仓库下载\n- 利用镜像创建并启动一个容器\n- 分配一个文件系统，并在只读的镜像层外面挂载一层可读写层\n- 从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去\n- 从地址池配置一个 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" 地址给容器\n- 执行用户指定的应用程序\n- 执行完毕后容器被终止\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("（2）进入容器")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入以守护态运行的容器")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方法一（推荐）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以交互的方式进入容器，可以执行容器的环境变量中的所有命令，如bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例一，执行环境变量中的命令bash")]),s._v("\ndocker "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container ID or NAMES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例一，执行环境变量中的命令gitlab-runner，register是参数")]),s._v("\ndocker "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it gitlab-runner gitlab-runner register\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方法二（不建议）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Docker自带的命令，进入容器在stdin中输入exit，会导致容器的停止")]),s._v("\ndocker attach "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container ID or NAMES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("（3）查看容器信息")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看正在运行的容器信息")]),s._v("\ndocker container "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" （docker ps）\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看全部容器信息（包括终止状态态容器）")]),s._v("\ndocker container "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -a （docker "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a）\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看最近的运行容器")]),s._v("\ndocker container "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l （docker "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -l）\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看日志")]),s._v("\ndocker logs "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container ID or NAMES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("（4）操作容器命令")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动已终止容器")]),s._v("\ndocker start "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container ID or NAMES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启正则运行状态容器")]),s._v("\ndocker restart "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container ID or NAMES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 终止容器")]),s._v("\ndocker stop "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container ID or NAMES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除容器")]),s._v("\ndocker "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container ID or NAMES"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有未正在运行的容器（正在运行的容器s）")]),s._v("\ndocker "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a -q"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"数据卷"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据卷"}},[s._v("#")]),s._v(" 数据卷")]),s._v(" "),n("p",[s._v("​\t　数据卷（Volume）跳过容器存储层，"),n("strong",[s._v("直接对宿主（或网络存储）发生读写")]),s._v("，性能和稳定性更高；数据卷"),n("strong",[s._v("生存周期独立于容器")]),s._v("，Docker 不会在容器被删除后自动删除数据卷。")]),s._v(" "),n("p",[s._v("​\t　数据卷可以在容器之间共享和重用；对数据卷的修改会立马生效；对数据卷的更新，不会影响镜像。所有的文件写入操作，都应该使用数据卷。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个数据卷")]),s._v("\ndocker volume create "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("volume_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有的数据卷")]),s._v("\ndocker volume "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看指定数据 的信息")]),s._v("\ndocker volume inspect "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("volume_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除数据卷")]),s._v("\ndocker volume "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("volume_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清理无任何容器引用的数据卷")]),s._v("\ndocker volume prune\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有未关联的数据卷")]),s._v("\ndocker volume "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker volume "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -qf "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dangling")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("（1）Docker写法")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("br"),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方式一：使用 --mount 参数器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个名为 web 的容器，并挂载 数据卷 到容器的 /webapp 目录")]),s._v("\ndocker run -d -P "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --name web "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --mount "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("source")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("volume_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",target"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/webapp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    training/webapp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    python app.py\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方式二：使用 -v 或者 --volume 参数")]),s._v("\ndocker run -d -P "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --name web "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -v "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("volume_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":/wepapp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --volume ./wepapp:/wepapp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    training/webapp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    python app.py\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("（2）Docker Compose写法")]),s._v(" "),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 写法一")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/mysql\n  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 写法二")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" mysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/mysql\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql-data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"运维指令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运维指令"}},[s._v("#")]),s._v(" 运维指令")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询所有网络信息")]),s._v("\ndocker network "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看某个网络信息")]),s._v("\ndocker network inspect network_name\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切断容器和网络的连接")]),s._v("\ndocker network disconnect -f network_name containers_name\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除网络")]),s._v("\ndocker network "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" network_name\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 web 容器的信息")]),s._v("\ndocker inspect web\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"docker仓库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker仓库"}},[s._v("#")]),s._v(" Docker仓库")]),s._v(" "),n("p",[s._v("​\t　Docker 仓库（Docker Registry）是一个"),n("strong",[s._v("集中的存储、分发镜像")]),s._v("的服务，默认的"),n("strong",[s._v("公有Docker 仓库")]),s._v("是官方的 "),n("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker Hub"),n("OutboundLink")],1),s._v("。")]),s._v(" "),n("h3",{attrs:{id:"docker-hub"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-hub"}},[s._v("#")]),s._v(" Docker Hub")]),s._v(" "),n("p",[s._v("​\t　根据是否是官方提供，可将镜像资源分为两类。一种是类似 "),n("code",[s._v("centos")]),s._v(" 这样的镜像，被称为基础镜像或根镜像。这些基础镜像由 Docker 公司创建、验证、支持、提供，这样的镜像往往使用单个单词作为名字。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找官方仓库中的镜像")]),s._v("\ndocker search centos\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 仅显示收藏数量为 N 以上的镜像")]),s._v("\ndocker search --filter"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("stars"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("N centos\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("​\t　还有一种类型，比如 "),n("code",[s._v("tianon/centos")]),s._v(" 镜像，它是由 Docker 的用户创建并维护的，往往带有用户名称前缀。可以通过前缀 "),n("code",[s._v("username/")]),s._v(" 来指定使用某个用户提供的镜像。首先，"),n("a",{attrs:{href:"https://cloud.docker.com",target:"_blank",rel:"noopener noreferrer"}},[s._v("注册"),n("OutboundLink")],1),s._v("一个 Docker 账号，然后在命令行页面输入用户名及密码登录 "),n("code",[s._v("Docker Hub")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 登录")]),s._v("\ndocker login -u 用户名 -p 密码\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注销")]),s._v("\ndocker "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("logout")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 标记本地镜像并指向目标仓库")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方式一：在构建的时候标记 (建议) ")]),s._v("\ndocker build -t username/ubuntu "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方式二：通过tag指向目标仓库")]),s._v("\ndocker tag ubuntu:17.10 username/ubuntu:17.10\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将标记的镜像上传到 Docker Hub")]),s._v("\ndocker push username/ubuntu:17.10\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询username下的仓库，判断是否推送成功")]),s._v("\ndocker search username\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("​\t　"),n("strong",[s._v("自动创建")]),s._v("允许用户通过 Docker Hub 指定跟踪一个目标网站（目前支持 "),n("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub"),n("OutboundLink")],1),s._v(" 或 "),n("a",{attrs:{href:"https://bitbucket.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("BitBucket"),n("OutboundLink")],1),s._v("）上的项目，一旦项目发生新的提交或者创建新的标签（tag），Docker Hub 会自动构建镜像并推送到 Docker Hub 中。自动创建配置完成后，可以在 Docker Hub 的 "),n("a",{attrs:{href:"https://registry.hub.docker.com/builds/",target:"_blank",rel:"noopener noreferrer"}},[s._v("自动创建页面"),n("OutboundLink")],1),s._v(" 中跟踪每次创建的状态。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自动创建配置步骤")]),s._v("\n- 创建并登录 Docker Hub，以及目标网站；\n- 在目标网站中连接帐户到 Docker Hub；\n- 在 Docker Hub 中 配置一个自动创建；\n- 选取一个目标网站中的项目（需要含 Dockerfile）和分支；\n- 指定 Dockerfile 的位置，并提交创建。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"私有仓库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#私有仓库"}},[s._v("#")]),s._v(" 私有仓库")]),s._v(" "),n("p",[s._v("​\t　用户还可以通过官方提供了 "),n("a",{attrs:{href:"https://store.docker.com/images/registry/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker Registry"),n("OutboundLink")],1),s._v(" 镜像 或者 通过第三方软件实现的"),n("a",{attrs:{href:"https://github.com/vmware/harbor",target:"_blank",rel:"noopener noreferrer"}},[s._v("VMWare Harbor"),n("OutboundLink")],1),s._v(" 镜像和 "),n("a",{attrs:{href:"https://www.sonatype.com/docker",target:"_blank",rel:"noopener noreferrer"}},[s._v("Sonatype Nexus"),n("OutboundLink")],1),s._v(" 镜像来搭建"),n("strong",[s._v("私有 Docker 仓库")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装运行 docker-registry")]),s._v("\ndocker run -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":5000 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -v /opt/data/registry:/var/lib/registry "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    registry\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 标记本地镜像并指向目标仓库")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方式一：在构建的时候标记 (建议) ")]),s._v("\ndocker build -t "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5000/ubuntu "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 方式二：通过tag标记已有版本号")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ip:port/ubuntu 默认最新版 <==>  ip:port/ubuntu:latest ")]),s._v("\ndocker tag ubuntu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5000/ubuntu\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上传标记的镜像")]),s._v("\ndocker push "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5000/ubuntu\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看仓库中的镜像")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5000/v2/_catalog\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看指定镜像")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5000/v2/ubuntu/tags/list\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像")]),s._v("\ndocker pull "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5000/ubuntu\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[s._v("​\t　若内网地址作为私有仓库地址（非127.0.0.1本地地址），Docker 是默认不允许以非 "),n("code",[s._v("HTTPS")]),s._v(" 方式推送镜像，可以通过 Docker 的配置选项来取消这个限制。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 类型一：Ubuntu 14.04, Debian 7 Wheezy")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编辑 /etc/default/docker 文件，在 DOCKER_OPTS 中增加如下内容")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_OPTS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--registry-mirror=https://registry.docker-cn.com \n\t\t\t --insecure-registries=192.168.199.100:5000"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启服务")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker restart\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 类型二：Ubuntu 16.04+, Debian 8+, centos 7")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /etc/docker/daemon.json 中写入如下内容（如果文件不存在请新建该文件）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registry-mirrors"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://registry.docker-cn.com"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"insecure-registries"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.199.100:5000"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 类型三：对于 Docker for Windows 、 Docker for Mac ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在设置中编辑 daemon.json 增加和上边一样的字符串即可")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h2",{attrs:{id:"docker实践"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker实践"}},[s._v("#")]),s._v(" Docker实践")]),s._v(" "),n("h3",{attrs:{id:"springboot应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springboot应用"}},[s._v("#")]),s._v(" SpringBoot应用")]),s._v(" "),n("p",[s._v("（1）使用"),n("code",[s._v("ENTRYPOINT")]),s._v("作为启动命令（推荐）")]),s._v(" "),n("p",[s._v("​\t　使用"),n("code",[s._v("ENTRYPOINT")]),s._v("作为启动命令，可以在"),n("code",[s._v("docker run")]),s._v("命令中"),n("strong",[s._v("动态设定")]),s._v("启动参数。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" openjdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("jre\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" project"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("1.0.0.jar .\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不建议写死")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ENTRYPOINT ["java", "-jar", "project-1.0.0.jar", "--spring.profiles.active=dev"]')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ENTRYPOINT ["java", "-jar","-Dspring.profiles.active=dev" ,"project-1.0.0.jar"]')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-jar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"project-1.0.0.jar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8080\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("​\t　然后，执行构建命令，构建镜像名称为"),n("code",[s._v("App")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("docker build -t app .\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("​\t　执行启动命令如下，"),n("code",[s._v("spring.profiles.active")]),s._v("可动态传入。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[s._v(" ")]),n("br")]),n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 写法一，传递环境变量，就是系统的环境变量")]),s._v("\ndocker run --name App -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--restart always  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TZ")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Asia/Shanghai  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-e spring.profiles.active"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dev\n\t-d App\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 写法二，追加的参数")]),s._v("\ndocker run --name App -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--restart always  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TZ")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Asia/Shanghai  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-d App "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--spring.profiles.active"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dev\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("（2）使用CMD作为启动命令")]),s._v(" "),n("p",[s._v("​\t　使用"),n("code",[s._v("CMD")]),s._v("作为启动命令，只能在"),n("code",[s._v("Dockerfile")]),s._v("中设置启动时的"),n("strong",[s._v("固定参数")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" openjdk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("jre\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" project"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("1.0.0.jar .\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CMD java -jar -Dspring.profiles.active=dev project-1.0.0.jar")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" java "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("jar project"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("1.0.0.jar "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("spring.profiles.active=dev\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8080\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("​\t　然后，执行构建命令，构建镜像名称为"),n("code",[s._v("App")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("docker build -t app .\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("​\t　执行启动命令如下。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("docker run --name App "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--restart always  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TZ")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Asia/Shanghai  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" \n\t-d App\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"tomcat应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tomcat应用"}},[s._v("#")]),s._v(" Tomcat应用")]),s._v(" "),n("p",[s._v("​\t　可以通过Dockerfile将"),n("strong",[s._v("项目定制为镜像")]),s._v("的方式进行项目部署。但是，这里建议采用"),n("strong",[s._v("数据卷")]),s._v("的方式来运行项目。")]),s._v(" "),n("p",[s._v("（1）通过数据卷部署应用")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("docker run --name tomcat "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--restart always  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TZ")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Asia/Shanghai  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载webapps部署目录")]),s._v("\n\t-v /usr/local/docker/tomcat/webapps/ROOT:/usr/local/tomcat/webapps/ROOT\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载API部署目录")]),s._v("\n\t-v /usr/local/docker/tomcat/api/:/usr/local/tomcat/api/\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置生效的profiles")]),s._v("\n\t-e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_OPTS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-Dspring.profiles.active=dev'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-d tomcat:8.5.32\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("（2）定制Tomcat应用镜像")]),s._v(" "),n("p",[s._v("​\t　使用"),n("code",[s._v("CMD")]),s._v("作为启动命令，可以通过"),n("code",[s._v("Tomcat")]),s._v("设置"),n("code",[s._v("JAVA_OPTS")]),s._v("动态传入参数。但是，仍推荐使用"),n("code",[s._v("ENTRYPOINT")]),s._v("作为启动命令。")]),s._v(" "),n("div",{staticClass:"language-dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tomcat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8.5.32\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /usr/local/tomcat/webapps/\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" rm "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("rf *\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" project"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("1.0.0.war .\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" mkdir ROOT \\\n\t&& unzip "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("o project"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("1.0.0.war "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("d api \\\n\t&& rm "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("rf project"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("1.0.0.war\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"catalina.sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"run"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8080\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("​\t　执行启动命令如下。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("docker run --name tomcat "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--restart always  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TZ")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Asia/Shanghai  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将当前目录下的test挂载到/usr/local/tomcat/webapps/test")]),s._v("\n\t-v "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),s._v("/test:/usr/local/tomcat/webapps/test "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 传入动态参数")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -e JAVA_OPTS='-Denable.scheduled=true' \\")]),s._v("\n\t-e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_OPTS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-Dspring.profiles.active=dev'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-d tomcat\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"mysql应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mysql应用"}},[s._v("#")]),s._v(" MySql应用")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("docker run -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":3306 --name mysql "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--restart always  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将主机当前目录下的 conf 挂载到容器的 /etc/mysql")]),s._v("\n\t-v /usr/local/docker/mysql/conf:/etc/mysql "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-v /usr/local/docker/mysql/logs:/var/log/mysql "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-v /usr/local/docker/mysql/data:/var/lib/mysql "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t-e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化root用户的密码")]),s._v("\n\t-d mysql\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"附录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[s._v("#")]),s._v(" 附录")]),s._v(" "),n("p",[s._v("（1）传输文件")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从容器复制文件到主机")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" containerID:container_path host_path\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从主机复制文件到容器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" host_path containerID:container_path\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例，复制canal容器中/home/admin/canal-server/conf/canal.properties到/home/canal")]),s._v("\ndocker "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" canal:/home/admin/canal-server/conf/canal.properties /home/canal\ndocker "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" canal:/home/admin/canal-server/conf/example/instance.properties /home/canal\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("（2）开放端口命令")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("firewall-cmd --zone"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public --add-port"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8081")]),s._v("/tcp --permanen\nfirewall-cmd --reload\nfirewall-cmd --zone"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public --query-port"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8081")]),s._v("/tcp\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);